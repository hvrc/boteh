body {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  gap: 20px;
}

.container {
  position: relative;
  width: min(640px, 100vw);
  height: min(640px, 100vw);
}

#webcam {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transform: scaleX(-1);
}

#canvas {
  position: absolute;
  width: 100%;
  height: 100%;
}

#startButton {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 15px 30px;
  z-index: 10;
  cursor: pointer;
}

.hidden {
  display: none !important;
}

/* Default state for controls */
.controls {
    padding: 15px;
    display: flex;
    align-items: center;
    gap: 10px;
    width: min(640px, 100vw);
    box-sizing: border-box;
    opacity: 1;
}

/* Common disabled state styling for all controls */
.controls.disabled .slider-container:not(.master-control),
.controls.disabled .button-container:not(.master-control) {
    opacity: 0.6;
    pointer-events: none;
    transition: opacity 0.3s ease;
}

/* Ensure master control stays active */
.master-control {
    opacity: 1 !important;
    pointer-events: auto !important;
}

/* Disabled state text styling */
.controls.disabled .slider-container:not(.master-control) label,
.controls.disabled .slider-container:not(.master-control) .value-display,
.controls.disabled .button-container:not(.master-control) label,
.controls.disabled .button-container:not(.master-control) .value-display {
    opacity: 0.6;
    transition: opacity 0.3s ease;
}

/* Disabled state button styling */
.controls.disabled .button-container:not(.master-control) .toggle-button {
    opacity: 0.6;
    pointer-events: none;
    cursor: default;
    transition: opacity 0.3s ease;
}

/* Master control exceptions */
.master-control label,
.master-control .value-display,
.master-control .toggle-button {
    opacity: 1 !important;
    pointer-events: auto !important;
    color: #000 !important;
    border-color: #000 !important;
    cursor: pointer !important;
}

/* Clear any other opacity overrides */
.controls.disabled *:not(.master-control *) {
    transition: opacity 0.3s ease;
}

.slider-container {
  position: relative;
  width: 80px;
  height: 80px;
  margin: 10px;
  overflow: visible; /* Changed from hidden to show text */
  user-select: none;
  flex: 0 0 auto;
  box-sizing: border-box;
}

.slider-container label {
  position: absolute;
  top: 10px;
  left: 0;
  width: 100%;
  text-align: center;
  color: #000;
  font-size: 18px;
  text-transform: lowercase;
  font-family: monospace;
  z-index: 2;
  pointer-events: none;
  user-select: none;
}

.control-container {
  display: flex;
  align-items: center;
  padding: 0 10px;
}

.radio-label {
  display: flex;
  align-items: center;
  gap: 5px;
  cursor: pointer;
}

.slider-group {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 10px;
  padding: 20px;
  width: min(960px, 100vw);
  margin: 0 auto;
}

/* Toggle switch styling */
.toggle-switch {
  position: relative;
  width: 60px;
  height: 24px;
}

.toggle-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.toggle-slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 24px;
}

.toggle-slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

input:checked + .toggle-slider {
  background-color: #2196F3;
}

input:checked + .toggle-slider:before {
  transform: translateX(36px);
}

/* Value display for sliders */
.value-display, 
.slider-container span {
    position: absolute;
    bottom: 10px;
    left: 0;
    width: 100%;
    text-align: center;
    color: #000;
    font-size: 16px;
    font-family: monospace;
    z-index: 2;
    pointer-events: none;
    user-select: none;
    text-transform: lowercase;
}

/* Update range input styling */
input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    width: 80px;
    height: 80px;
    background: #fff;
    outline: none;
    margin: 0;
    cursor: pointer;
    position: relative;
    border: 1px solid #000;
}

input[type="range"]::-webkit-slider-runnable-track {
  width: 100%;
  height: 80px;
  background: linear-gradient(to right, #CCCCFF var(--value-percent, 0%), #fff var(--value-percent, 0%));
  border: none;
}

input[type="range"]::-moz-range-track {
  width: 100%;
  height: 80px;
  background: linear-gradient(to right, #CCCCFF var(--value-percent, 0%), #fff var(--value-percent, 0%));
  border: none;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 0;
  height: 0;
  background: transparent;
  border: none;
  box-shadow: none;
}

input[type="range"]::-moz-range-thumb {
  width: 0;
  height: 0;
  background: transparent;
  border: none;
  box-shadow: none;
}

.container canvas {
  background-color: #fff;  /* Change from #1a1a1a to white */
  border: 1px solid #000; /* Add black border */
}

#webcam.hidden {
  display: none;
}

/* Update button styling */
.button-container {
    position: relative;
    width: 80px;
    height: 80px;
    margin: 10px;
    user-select: none;
    flex: 0 0 auto;
    box-sizing: border-box;
}

.toggle-button {
    width: 100%;
    height: 100%;
    border: 1px solid #000;
    background: #fff;
    padding: 0;
    cursor: pointer;
    transition: background-color 0.1s ease;
}

/* Add disabled state styling */
.controls.disabled .button-container:not(.master-control) .toggle-button {
    opacity: 0.6;
    pointer-events: none;
    cursor: default;
}

/* Ensure master switch is always clickable */
.master-control .toggle-button {
    opacity: 1 !important;
    pointer-events: auto !important;
    cursor: pointer !important;
}

.toggle-button[data-state="on"] {
    background: #CCCCFF;
}

/* Add specific styling for the power button */
.master-control .toggle-button {
    border: 1px solid #000;
}

/* Update the disabled state styling for button containers */
.controls.disabled .button-container:not(.master-control) {
    opacity: 0.6;
    pointer-events: none;
}

.controls.disabled .button-container:not(.master-control) label,
.controls.disabled .button-container:not(.master-control) .value-display {
    opacity: 0.6;
    /* color: #888; */
}

/* Update disabled state styling for all controls */
.controls.disabled .slider-container:not(.master-control),
.controls.disabled .button-container:not(.master-control) {
    opacity: 0.6;
    pointer-events: none;
}

/* Update text colors for disabled state */
.controls.disabled .slider-container:not(.master-control) label,
.controls.disabled .slider-container:not(.master-control) .value-display,
.controls.disabled .button-container:not(.master-control) label,
.controls.disabled .button-container:not(.master-control) .value-display {
    opacity: 0.6;
    /* color: #888; */
}

/* Update button specific disabled state */
.controls.disabled .button-container:not(.master-control) .toggle-button {
    opacity: 0.6;
    pointer-events: none;
    cursor: default;
    /* border-color: #888; */
}

/* Ensure master switch stays active */
.master-control label,
.master-control .value-display,
.master-control .toggle-button {
    opacity: 1 !important;
    pointer-events: auto !important;
    color: #000 !important;
    border-color: #000 !important;
    cursor: pointer !important;
}

/* Keep the existing button styles */
.button-container label {
    position: absolute;
    top: 10px;
    left: 0;
    width: 100%;
    text-align: center;
    color: #000;
    font-size: 18px;
    text-transform: lowercase;
    font-family: monospace;
    z-index: 2;
    pointer-events: none;
}

.button-container .value-display {
    position: absolute;
    bottom: 10px;
    left: 0;
    width: 100%;
    text-align: center;
    color: #000;
    font-size: 16px;
    font-family: monospace;
    pointer-events: none;
    text-transform: lowercase;
}
